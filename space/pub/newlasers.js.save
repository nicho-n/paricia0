var raycaster = new THREE.Raycaster(); 
var mouse = new THREE.Vector2();
var beamLength = 100;
var laserVelocity = 100;
var laserRadius = 1;
var lasers = [];
var maxLaserDist = -19000; // distance before laser disappears
var laserGeom = new THREE.CylinderGeometry(laserRadius,laserRadius,beamLength, 4);
laserGeom.applyMatrix(new THREE.Matrix4().makeTranslation(0, beamLength/2, 0));
laserGeom.applyMatrix(new THREE.Matrix4().makeRotationX(Math.PI/2));
var laserMat = new THREE.MeshPhongMaterial({
	ambient : 0,
        emissive : 0xff0000,
        color : 0xff0000,
        specular : 0x101010,
	shininess: 20
});
//var laser = new THREE.Mesh(laserGeom, laserMat);



class Laser{

	contructor(origin, direction){
		this.origin = origin;
		this.direction = direction;
	}
w
	go(){
		var laser = new THREE.Mesh(laserGeom, laserMat);
		laser.dir = new THREE.Vector3(0,0,0);
               raycaster.setFromCamera(mouse, camera);
                raycaster.ray.origin.x = playerInfo.x;
                raycaster.ray.origin.y = playerInfo.y;
                raycaster.ray.origin.z = playerInfo.z;


	//	raycaster.setFromCamera(mouse, camera);
		laser.time = 0;
		laser.position.x = playerInfo.x;
		laser.position.y = playerInfo.y;
		laser.position.z = playerInfo.z - 200;

		laser.dir = raycaster.ray.direction;
		lasers.push(laser);
		scene.add(laser);
	}

	kill(){
		lasers.shift();
	}


}

function onMouseMove(event) {
	mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;
}


        window.addEventListener('mousemove', onMouseMove, false);

